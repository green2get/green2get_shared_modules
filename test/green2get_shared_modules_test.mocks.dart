// Mocks generated by Mockito 5.4.3 from annotations
// in green2get_shared_modules/test/green2get_shared_modules_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;
import 'dart:typed_data' as _i4;

import 'package:green2get_shared_modules/modules/test/logic/picsum_photos_instructions.dart'
    as _i2;
import 'package:green2get_shared_modules/modules/test/models/picsum_photos_models.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [PicsumPhotosInstructions].
///
/// See the documentation for Mockito's code generation for more information.
class MockPicsumPhotosInstructions extends _i1.Mock
    implements _i2.PicsumPhotosInstructions {
  MockPicsumPhotosInstructions() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.Uint8List?> getPicsumImageBytes({
    required int? width,
    int? height,
    int? id,
    String? randomSeed,
    bool? grayscale,
    int? blur,
    String? fileType,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPicsumImageBytes,
          [],
          {
            #width: width,
            #height: height,
            #id: id,
            #randomSeed: randomSeed,
            #grayscale: grayscale,
            #blur: blur,
            #fileType: fileType,
          },
        ),
        returnValue: _i3.Future<_i4.Uint8List?>.value(),
      ) as _i3.Future<_i4.Uint8List?>);

  @override
  _i3.Future<_i5.PicsumPhotosItemList?> getPicsumImageList({
    int? page,
    int? limit,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPicsumImageList,
          [],
          {
            #page: page,
            #limit: limit,
          },
        ),
        returnValue: _i3.Future<_i5.PicsumPhotosItemList?>.value(),
      ) as _i3.Future<_i5.PicsumPhotosItemList?>);
}
