// Mocks generated by Mockito 5.4.3 from annotations
// in green2get_shared_modules/test/modules/po_board/po_board_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:ui' as _i7;

import 'package:get/get.dart' as _i2;
import 'package:get/get_state_manager/src/simple/list_notifier.dart' as _i6;
import 'package:green2get_shared_modules/green2get_shared_modules.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

import 'controllers/po_board_controller.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeInternalFinalCallback_0<T> extends _i1.SmartFake
    implements _i2.InternalFinalCallback<T> {
  _FakeInternalFinalCallback_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PoBoardController].
///
/// See the documentation for Mockito's code generation for more information.
class MockPoBoardController extends _i1.Mock implements _i3.PoBoardController {
  MockPoBoardController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.InternalFinalCallback<void> get onStart => (super.noSuchMethod(
        Invocation.getter(#onStart),
        returnValue: _FakeInternalFinalCallback_0<void>(
          this,
          Invocation.getter(#onStart),
        ),
      ) as _i2.InternalFinalCallback<void>);

  @override
  _i2.InternalFinalCallback<void> get onDelete => (super.noSuchMethod(
        Invocation.getter(#onDelete),
        returnValue: _FakeInternalFinalCallback_0<void>(
          this,
          Invocation.getter(#onDelete),
        ),
      ) as _i2.InternalFinalCallback<void>);

  @override
  bool get initialized => (super.noSuchMethod(
        Invocation.getter(#initialized),
        returnValue: false,
      ) as bool);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  int get listeners => (super.noSuchMethod(
        Invocation.getter(#listeners),
        returnValue: 0,
      ) as int);

  @override
  Iterable<_i4.PoBoardItemData> get poBoardItems => (super.noSuchMethod(
        Invocation.getter(#poBoardItems),
        returnValue: <_i4.PoBoardItemData>[],
      ) as Iterable<_i4.PoBoardItemData>);

  @override
  void onReady() => super.noSuchMethod(
        Invocation.method(
          #onReady,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onClose() => super.noSuchMethod(
        Invocation.method(
          #onClose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<dynamic> retrievePoBoardList({
    void Function()? onSuccessful,
    void Function()? onFailed,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #retrievePoBoardList,
          [],
          {
            #onSuccessful: onSuccessful,
            #onFailed: onFailed,
          },
        ),
        returnValue: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);

  @override
  void update([
    List<Object>? ids,
    bool? condition = true,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #update,
          [
            ids,
            condition,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onInit() => super.noSuchMethod(
        Invocation.method(
          #onInit,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void $configureLifeCycle() => super.noSuchMethod(
        Invocation.method(
          #$configureLifeCycle,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Disposer addListener(_i6.GetStateUpdate? listener) => (super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValue: () {},
      ) as _i6.Disposer);

  @override
  void removeListener(_i7.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void refresh() => super.noSuchMethod(
        Invocation.method(
          #refresh,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void refreshGroup(Object? id) => super.noSuchMethod(
        Invocation.method(
          #refreshGroup,
          [id],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyChildrens() => super.noSuchMethod(
        Invocation.method(
          #notifyChildrens,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListenerId(
    Object? id,
    _i7.VoidCallback? listener,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #removeListenerId,
          [
            id,
            listener,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Disposer addListenerId(
    Object? key,
    _i6.GetStateUpdate? listener,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addListenerId,
          [
            key,
            listener,
          ],
        ),
        returnValue: () {},
      ) as _i6.Disposer);

  @override
  void disposeId(Object? id) => super.noSuchMethod(
        Invocation.method(
          #disposeId,
          [id],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void disposeAllPoBoardResources() => super.noSuchMethod(
        Invocation.method(
          #disposeAllPoBoardResources,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  double? getCurrentReceivingAmountOf(_i4.PoBoardItemData? item) =>
      (super.noSuchMethod(Invocation.method(
        #getCurrentReceivingAmountOf,
        [item],
      )) as double?);

  @override
  Duration? getCoundownTimerOf(_i4.PoBoardItemData? item) =>
      (super.noSuchMethod(Invocation.method(
        #getCoundownTimerOf,
        [item],
      )) as Duration?);

  @override
  bool? getItemAttachedButtonEnabledOf(_i4.PoBoardItemData? item) =>
      (super.noSuchMethod(Invocation.method(
        #getItemAttachedButtonEnabledOf,
        [item],
      )) as bool?);

  @override
  bool applyEachItemAttachedButtonEnabled(_i4.PoBoardItemData? item) =>
      (super.noSuchMethod(
        Invocation.method(
          #applyEachItemAttachedButtonEnabled,
          [item],
        ),
        returnValue: false,
      ) as bool);

  @override
  void replacePoBoardList(Iterable<_i4.PoBoardItemData>? list) =>
      super.noSuchMethod(
        Invocation.method(
          #replacePoBoardList,
          [list],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateCountdownTimers() => super.noSuchMethod(
        Invocation.method(
          #updateCountdownTimers,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateCurrentReceivingAmountCounters() => super.noSuchMethod(
        Invocation.method(
          #updateCurrentReceivingAmountCounters,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateEachItemAttachedButtonEnabled() => super.noSuchMethod(
        Invocation.method(
          #updateEachItemAttachedButtonEnabled,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void startCountdownTimers() => super.noSuchMethod(
        Invocation.method(
          #startCountdownTimers,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void stopCountdownTimers() => super.noSuchMethod(
        Invocation.method(
          #stopCountdownTimers,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
